---
version: "3.9"

services:
  database:
    container_name: database
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: default
    hostname: database
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - /pgdata
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U default -d default'"]
      interval: 5s
      timeout: 5s
      retries: 25

  database-migrations:
    image: flyway/flyway:9.10-alpine
    container_name: backend-migrations
    command:
      - info
      - migrate
      - info
    volumes:
      - "./backend/flyway/sql:/flyway/sql"
    environment:
      - FLYWAY_URL=jdbc:postgresql://database:5432/default
      - FLYWAY_USER=default
      - FLYWAY_PASSWORD=default
      - FLYWAY_BASELINE_ON_MIGRATE=true
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default

  backend:
    container_name: backend
    entrypoint:
      - "sh"
      - "-c"
      - "npm i && npm run start"
    environment:
      NODE_ENV: development
      POSTGRESQL_HOST: database
      POSTGRESQL_USER: default
      POSTGRESQL_PASSWORD: default
      POSTGRESQL_DATABASE: default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    hostname: backend
    image: node:18
    links:
      - database
    ports:
      - "3001:3000"
    volumes:
      - ./backend:/app:z
      - /app/node_modules
    working_dir: "/app"
    depends_on:
      database :
        condition: service_healthy
      database-migrations:
        condition: service_started
    networks:
      - default

  frontend: # run the prod build in local first using npm run build
    build:
      context: frontend
    image: frontend:latest
    container_name: frontend
    environment:
      NODE_ENV: development
      BACKEND_URL: http://backend:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    hostname: frontend

    links:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/Caddyfile:/etc/caddy/Caddyfile
      - ./frontend/dist:/srv
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - default
networks:
  default:
    driver: bridge
