name: .Database Deploy

on:
  workflow_call:
    inputs: ### Required
      target:
        description: PR number, test or prod
        required: true
        type: string
      directory:
        description: Crunchy Chart directory
        default: 'charts/crunchy'
        required: false
        type: string
      oc_server:
        default: https://api.silver.devops.gov.bc.ca:6443
        description: 'OpenShift server'
        required: false
        type: string
      environment:
        description: Environment name; omit for PRs
        required: false
        type: string
      s3_enabled:
        description: Enable S3 backups
        required: false
        type: boolean
    secrets:
      oc_namespace:
        description: OpenShift namespace
        required: true
      oc_token:
        description: OpenShift token
        required: true
      s3_access_key:
        description: S3 access key
        required: false
      s3_secret_key:
        description: S3 secret key
        required: false
      s3_bucket:
        description: S3 bucket
        required: false
      s3_endpoint:
        description: S3 endpoint
        required: false
jobs:
  deploy_db:
    runs-on: ubuntu-24.04
    name: Deploy Crunchy DB If not Deployed
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Install CLI tools from OpenShift Mirror
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14.37"
      - name: Validate Inputs
        shell: bash
        run: |
          if ["${{ inputs.s3_enabled }}" ]; then
            echo "S3 ie enabled for backups, checking for mandatory secrets"
            if [ ! "${{ secrets.s3_access_key }}" ]; then
              echo "S3 access key not found"
              exit 1
            fi
            if [ ! "${{ secrets.s3_secret_key }}" ]; then
              echo "S3 secret key not found"
              exit 1
            fi
            if [ ! "${{ secrets.s3_bucket }}" ]; then
              echo "S3 bucket not found"
              exit 1
            fi
            if [ ! "${{ secrets.s3_endpoint }}" ]; then
              echo "S3 endpoint not found"
              exit 1
            fi
          fi
          
      - name: OC Login
        shell: bash
        run: |
          # OC Login
          OC_TEMP_TOKEN=$(curl -k -X POST ${{ inputs.oc_server }}/api/v1/namespaces/${{ secrets.oc_namespace }}/serviceaccounts/pipeline/token --header "Authorization: Bearer ${{ secrets.oc_token }}" -d '{"spec": {"expirationSeconds": 600}}' -H 'Content-Type: application/json; charset=utf-8' | jq -r '.status.token' )

          oc login --token=$OC_TEMP_TOKEN --server=${{ inputs.oc_server }}
          oc project ${{ secrets.oc_namespace }} # Safeguard!
      - name: Deploy Database
        working-directory: ${{ inputs.directory }}
        shell: bash
        run: |
          echo 'Deploying crunchy helm chart'
          if [ ${{ secrets.s3_endpoint }} ]; then
            helm upgrade --install --wait --set crunchy.pgBackRest.s3.enabled=true \
             --set-string crunchy.pgBackRest.s3.accessKey=${{ secrets.s3_access_key }} \
              --set-string crunchy.pgBackRest.s3.secretKey=${{ secrets.s3_secret_key }} \
              --set-string crunchy.pgBackRest.s3.bucket=${{ secrets.s3_bucket }} \
              --set-string crunchy.pgBackRest.s3.endpoint=${{ secrets.s3_endpoint }} \
              postgres .
          else
            helm upgrade --install --wait postgres .
          fi
      - name: Add PR specific user to Crunchy DB # only for PRs
        shell: bash
        if: github.event.inputs.environment == '' 
        run: |
          echo 'Adding PR specific user to Crunchy DB'
          # Add PR specific user to Crunchy DB
          # This is a placeholder for the actual command
          # The command will be added in a future PR
          

