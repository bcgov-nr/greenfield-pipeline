name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Init
        run: |
          set -ex
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.NAMESPACE }}

          oc process -f .pipeline/build.yml \
            -p SUFFIX=${{ github.event.number }} -p GIT_BRANCH=${GITHUB_HEAD_REF} \
          | oc apply -f -

      - name: Build Start
        run: |
          set -ex
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.NAMESPACE }}

          oc cancel-build bc/gfp-${{ github.event.number }}
          oc start-build bc/gfp-${{ github.event.number }} --follow
          LATEST=$(oc get bc/gfp-${{ github.event.number }} -o 'jsonpath={.status.lastVersion}')
          RESULT=$(oc get build/gfp-${{ github.event.number }}-${LATEST} -o 'jsonpath={.status.phase}')
          if [ "${RESULT}" != "Complete" ]; then
            echo -e "\n--- ERROR ---\n"
            echo -e "Build status: ${RESULT}"
            exit 1
          fi
          echo "Build successful"

  deploy:
    name: Deploy
    needs: Build
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy Init
        run: |
          set -ex
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.NAMESPACE }}

          # Cancel any previous rollouts
          oc rollout cancel dc/gfp-${{ github.event.number }}

          # Process and apply deployment config
          oc process -f .pipeline/deploy.yml \
            -p SUFFIX=${{ github.event.number }} -p ENV=${{ secrets.ENV }} \
          | oc apply -f -

      - name: Deploy Rollout
        run: |
          set -ex
          oc login --token=${{ secrets.OC_TOKEN }} --server=${{ secrets.OC_SERVER }}
          oc project ${{ secrets.NAMESPACE }}

          # Follow rollout
          oc logs -f dc/gfp-${{ github.event.number }}

          # Rollout status
          STATUS=$(oc rollout history dc/gfp-${{ github.event.number }} \
            | grep -v -e '^[[:space:]]*$' | tail -n1 | awk '{print $2}' \
          )

          # Process result
          if [ "${STATUS}" == "Complete" ]
          then
            echo "Build successful"
          else
            echo -e "\n--- ERROR ---\n"
            echo -e "Deployment status: ${STATUS}"
            exit 1
          fi
