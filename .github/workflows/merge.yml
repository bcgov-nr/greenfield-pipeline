name: Merge

on:
  push:
    tags: ['*']

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  semver:
    name: Semantic Version
    outputs:
      semver: ${{ steps.changelog.outputs.version }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - name: Conventional Changelog Update
        uses: TriPSs/conventional-changelog-action@v4
        id: changelog
        continue-on-error: true
        with:
          github-token: ${{ github.token }}
          skip-version-file: 'true'
          skip-commit: 'true'
          skip-on-empty: 'false'
          git-push: 'false'

  get-digest:
    name: Get Digests
    outputs:
      backend_tag: ${{ steps.get_digest.outputs.backend_tag }}
      migrations_tag: ${{ steps.get_digest.outputs.migrations_tag }}
      frontend_tag: ${{ steps.get_digest.outputs.frontend_tag }}
    runs-on: ubuntu-22.04
    strategy:
        matrix:
            package: [backend, migrations, frontend]
    steps:
      - name: return digest
        id: get_digest
        run: |
          DIGEST=$(docker manifest inspect ghcr.io/${{ github.repository }}/${{ matrix.package }}:test | jq '.manifests[0].digest')
          echo "${{ matrix.package }}_tag=${DIGEST}" >> $GITHUB_OUTPUT

  deploys-test:
    name: Deploys (test)
    needs: [get-digest]
    uses: ./.github/workflows/.deploy.yml
    secrets: inherit
    with:
      environment: test
      backend_tag: ${{ needs.get-digest.outputs.backend_tag }}
      migrations_tag: ${{ needs.get-digest.outputs.migrations_tag }}
      frontend_tag: ${{ needs.get-digest.outputs.frontend_tag }}
      target: test

  integration-e2e:
    name: Integration and E2E Tests
    needs: [deploys-test]
    uses: ./.github/workflows/.tests.yml
    with:
      target: test

  deploys-prod:
    name: Deploys (prod)
    needs: [get-digest, integration-e2e]
    uses: ./.github/workflows/.deploy.yml
    secrets: inherit
    with:
      environment: prod
      backend_tag: ${{ needs.get-digest.outputs.backend_tag }}
      migrations_tag: ${{ needs.get-digest.outputs.migrations_tag }}
      frontend_tag: ${{ needs.get-digest.outputs.frontend_tag }}
      target: prod

  tags:
    name: Create Tags
    needs: [deploys-prod]
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - name: Create Tags
        if: ${{ needs.semver.outputs.semver != '' }}
        run: |
          git tag ${{ needs.semver.outputs.semver }}
          git push origin --tag
