name: PR

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  # PR open and close use the same group, allowing only one at a time
  group: pr-${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    timeout-minutes: 1
    steps:
      - name: PR Greeting
        uses: bcgov-nr/action-pr-description-add@v1.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Deployments, as required, will be available below:
            - [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }})
            - [Backend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/api)

            Please create PRs in draft mode.  Mark as ready to enable:
            - [Analysis Workflow](https://github.com/${{ github.repository }}/actions/workflows/analysis.yml)

            After merge, new images are promoted to:
            - [Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  # https://github.com/bcgov-nr/action-builder-ghcr
  builds:
    name: Builds
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    strategy:
      matrix:
        package: [ migrations, backend, frontend]
        include:
          - package: migrations
            build_context: ./backend/db
            triggers: ('backend/db')
          - package: backend
            triggers: ('backend/')
          - package: frontend
            triggers: ('frontend/')
    timeout-minutes: 10
    steps:
      - uses: bcgov-nr/action-builder-ghcr@v1.3.0
        with:
          keep_versions: 50
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: test
          token: ${{ secrets.GITHUB_TOKEN }}
          triggers: ${{ matrix.triggers }}
          build_context: ${{ matrix.build_context }}

  # https://github.com/bcgov-nr/action-deployer-openshift
  deploys:
    name: Deploys
    needs: [builds]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          # Allow pipefail, since we could be catching oc create errors
          set +o pipefail
          
          # Login to OpenShift (NOTE: project command is a safeguard)
          oc login --token=${{ secrets.oc_token }} --server=${{ vars.oc_server }}
          oc project ${{ vars.oc_namespace }}
          
          # Deploy Helm Chart
          cd charts/${{ github.event.repository.name }}
          helm dependency update
          helm upgrade --install --wait --atomic ${{ github.event.repository.name }}-${{ github.event.number }} --values values-pr.yaml --set-string global.repository=${{ github.repository }}  --set-string backend.containers[0].tag="${{ github.event.number }}" --set-string backend.initContainers[0].tag="${{ github.event.number }}" --set-string frontend.containers[0].tag="${{ github.event.number }}" --set-string bitnami-pg.auth.password=${{secrets.DB_PASSWORD}} --set-string bitnami-pg.auth.postgresPassword=${{secrets.DB_PASSWORD}}   --timeout 10m .
