name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        # Run if PR opened or reopened
        if: contains(github.event.action, 'opened')
        uses: DerekRoberts/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/) available
            [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/) available

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  # builds:
  #   name: Builds
  #   uses: bcgov/nr-quickstart-helpers/.github/workflows/_build.yml@v0.0.2
  #   permissions:
  #     packages: write
  #   strategy:
  #     matrix:
  #       component: [backend, frontend]
  #       include:
  #         - component: backend
  #           triggers: ('backend/')
  #         - component: frontend
  #           triggers: ('frontend/')
  #   secrets:
  #     gh_token: ${{ secrets.GITHUB_TOKEN }}
  #   with:
  #     component: ${{ matrix.component }}
  #     img_build: ${{ github.event.number }}
  #     img_fallback: test
  #     triggers: ${{ matrix.triggers }}

  # deploys:
  #   name: Deploys
  #   needs:
  #     - builds
  #   # # If any of the prerequs created a build, then deploy
  #   # if: contains(needs.*.outputs.build, 'true')
  #   uses: bcgov/nr-quickstart-helpers/.github/workflows/_deploy.yml@v0.0.2
  #   strategy:
  #     matrix:
  #       component: [backend, database, frontend]
  #       include:
  #         - component: database
  #           overwrite: false
  #           template_file: database/openshift.deploy.yml
  #           template_vars: -p ZONE=${{ github.event.number }}
  #         - component: backend
  #           overwrite: true
  #           template_file: backend/openshift.deploy.yml
  #           template_vars:
  #             -p ZONE=${{ github.event.number }} -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
  #             -p PROMOTE=${{ github.repository }}/backend:${{ github.event.number }}
  #         - component: frontend
  #           overwrite: true
  #           template_file: frontend/openshift.deploy.yml
  #           template_vars:
  #             -p ZONE=${{ github.event.number }} -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
  #             -p PROMOTE=${{ github.repository }}/frontend:${{ github.event.number }}
  #   secrets:
  #     oc_namespace: ${{ secrets.OC_NAMESPACE }}
  #     oc_server: ${{ secrets.OC_SERVER }}
  #     oc_token: ${{ secrets.OC_TOKEN }}
  #   with:
  #     component: ${{ matrix.component }}
  #     overwrite: ${{ matrix.overwrite }}
  #     penetration_test: false
  #     template_file: ${{ matrix.template_file }}
  #     template_vars: ${{ matrix.template_vars }}

  tests:
    name: Unit Tests
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_unit-tests.yml@v0.0.2
    strategy:
      matrix:
        component: [backend, frontend]
    with:
      component: ${{ matrix.component }}
      test_cmd: npm run test:cov

  sonarcloud-backend:
    name: Static Analysis Backend
    needs:
      - tests
    runs-on: ubuntu-22.04
    steps:
      # Disable shallow clone for SonarCloud analysis
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Backend coverage from cache
        uses: actions/cache@v3
        with:
          path: backend/coverage
          key: coverage-backend-${{ github.run_number }}
          restore-keys: |
            coverage-backend-

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        with:
          args: >
            -Dsonar.cobertura.reportPaths=backend/coverage/cobertura-coverage.xml
            -Dsonar.exclusions=**/test/**,.github/**/*,*.md
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.project.monorepo.enabled=true
            -Dsonar.projectKey=bcgov_nr-quickstart-typescript_a
            -Dsonar.sources=backend
            -Dsonar.tests=backend/test
            -Dsonar.log.level=DEBUG

  sonarcloud-frontend:
    name: Static Analysis Frontend
    needs:
      - tests
    runs-on: ubuntu-22.04
    steps:
      # Disable shallow clone for SonarCloud analysis
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Frontend coverage from cache
        uses: actions/cache@v3
        with:
          path: frontend/coverage
          key: coverage-frontend-${{ github.run_number }}
          restore-keys: |
            coverage-frontend-

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        with:
          args: >
            -Dsonar.cobertura.reportPaths=frontend/coverage/cobertura-coverage.xml
            -Dsonar.exclusions=**/test/**,.github/**/*,*.md
            -Dsonar.javascript.lcov.reportPaths=frontend/coverage/lcov.info
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.project.monorepo.enabled=true
            -Dsonar.projectKey=bcgov_nr-quickstart-typescript_b
            -Dsonar.sources=frontend
            -Dsonar.tests=frontend/test
            -Dsonar.log.level=DEBUG
            -Dsonar.verbose=true

  # # Uncomment to view GitHub context object
  # # https://docs.github.com/en/actions/learn-github-actions/contexts
  # view-context:
  #   name: View GitHub Context
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Echo GitHub context
  #       uses: satackey/action-js-inline@v0.0.2
  #       with:
  #         script: |
  #           const github = require('@actions/github');
  #           console.log(JSON.stringify(github, null, 2));
