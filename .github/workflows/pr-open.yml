name: Pull Request

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  oc_namespace: ${{ secrets.OC_NAMESPACE }}

jobs:
  pr-greeting:
    name: PR Greeting
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ github.event.number }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    steps:
      - name: PR Greeting
        # # Run if PR opened or reopened
        # if: contains(github.event.action, 'opened')
        uses: DerekRoberts/action-pr-description-add@v0.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---

            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [Backend](https://${{ env.PREFIX }}-backend.${{ env.DOMAIN }}/) available
            [Frontend](https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/) available

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)

  builds:
    name: Builds
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_build.yml@v0.0.2
    permissions:
      packages: write
    strategy:
      matrix:
        component: [backend, frontend]
        include:
          - component: backend
            triggers: ('backend/')
          - component: frontend
            triggers: ('frontend/')
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    with:
      component: ${{ matrix.component }}
      img_build: ${{ github.event.number }}
      img_fallback: test
      triggers: ${{ matrix.triggers }}

  deploys:
    name: Deploys
    needs:
      - builds
    # # If any of the prerequs created a build, then deploy
    # if: contains(needs.*.outputs.build, 'true')
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_deploy.yml@main
    strategy:
      matrix:
        component: [init, backend, database, frontend]
        include:
          - component: init
            overwrite: false
            template_file: common/openshift.init.yml
            template_vars: -p ZONE=${{ github.event.number }}
          - component: database
            overwrite: false
            template_file: database/openshift.deploy.yml
            template_vars: -p ZONE=${{ github.event.number }} -p IMAGE_NAMESPACE=${{ env.oc_namespace
          - component: backend
            overwrite: true
            template_file: backend/openshift.deploy.yml
            template_vars:
              -p ZONE=${{ github.event.number }} -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
              -p PROMOTE=${{ github.repository }}/backend:${{ github.event.number }}
          - component: frontend
            overwrite: true
            template_file: frontend/openshift.deploy.yml
            template_vars:
              -p ZONE=${{ github.event.number }} -p MIN_REPLICAS=1 -p MAX_REPLICAS=2
              -p PROMOTE=${{ github.repository }}/frontend:${{ github.event.number }}
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      component: ${{ matrix.component }}
      overwrite: ${{ matrix.overwrite }}
      penetration_test: false
      template_file: ${{ matrix.template_file }}
      template_vars: ${{ matrix.template_vars }}

  tests:
    name: Unit Tests and Analysis
    uses: bcgov/nr-quickstart-helpers/.github/workflows/_unit-tests.yml@main
    strategy:
      matrix:
        dir: [backend, frontend]
        include:
          - dir: backend
            sonar_projectKey: bcgov_nr-quickstart-typescript_backend
            sonar_token: SONAR_TOKEN_BACKEND
          - dir: frontend
            sonar_projectKey: bcgov_nr-quickstart-typescript_frontend
            sonar_token: SONAR_TOKEN_FRONTEND
    secrets:
      sonar_token: ${{ secrets[matrix.sonar_token] }}
    with:
      dir: ${{ matrix.dir }}
      sonar_args: >
        -Dsonar.organization=bcgov-sonarcloud
        -Dsonar.projectKey=${{ matrix.sonar_projectKey }}
      test_cmd: |
        npm ci
        npm run test:cov

  sonarcloud:
    name: SonarCloud
    needs:
      - tests
    runs-on: ubuntu-22.04
    env:
      SONAR_TOKEN: ${{ secrets[matrix.token] }}
    strategy:
      matrix:
        component: [backend, frontend]
        include:
          - component: backend
            projectKey: bcgov_nr-quickstart-typescript_backend
            token: SONAR_TOKEN_BACKEND
          - component: frontend
            projectKey: bcgov_nr-quickstart-typescript_frontend
            token: SONAR_TOKEN_FRONTEND
    steps:
      # Disable shallow clone for SonarCloud analysis
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get ${{ matrix.component }} coverage from cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.component }}/coverage
          key: coverage-${{ matrix.component }}-${{ github.run_number }}
          restore-keys: |
            coverage-${{ matrix.component }}-

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets[matrix.token] }}
        with:
          projectBaseDir: ${{ matrix.component }}
          args: >
            -Dsonar.cobertura.reportPaths=coverage/cobertura-coverage.xml
            -Dsonar.exclusions=**/test/**,.github/**/*,*.md
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.project.monorepo.enabled=true
            -Dsonar.projectKey=${{ matrix.projectKey }}
            -Dsonar.tests=test

  # # Uncomment to view GitHub context object
  # # https://docs.github.com/en/actions/learn-github-actions/contexts
  # view-context:
  #   name: View GitHub Context
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Echo GitHub context
  #       uses: satackey/action-js-inline@v0.0.2
  #       with:
  #         script: |
  #           const github = require('@actions/github');
  #           console.log(JSON.stringify(github, null, 2));
