name: Pull Request

on:
  pull_request:

env:
  REGISTRY: ghcr.io
  NAME: gfp

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-backend:
    name: Build
    uses: ./.github/workflows/_build.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    with:
      component: backend
      img_build: ${{ github.event.number }}
      img_fallback: prod
      triggers: ('backend/')

  build-frontend:
    name: Build
    uses: ./.github/workflows/_build.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    with:
      component: frontend
      img_build: ${{ github.event.number }}
      img_fallback: prod
      triggers: ('frontend/')

  tests-backend:
    name: Unit Tests
    uses: ./.github/workflows/_code-cov.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    with:
      component: backend
      lcov_file: backend/coverage/lcov.info
      test_cmd: npm run test:cov

  tests-frontend:
    name: Unit Tests
    uses: ./.github/workflows/_code-cov.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    with:
      component: frontend
      lcov_file: coverage
      test_cmd: npm run test:cov

  sonarcloud:
    name: Static Analysis
    needs:
      - tests-backend
      - tests-frontend
    runs-on: ubuntu-22.04
    steps:
      # Disable shallow clone for SonarCloud analysis
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get backend coverage from cache
        id: cache-backend
        uses: actions/cache@v3
        with:
          path: backend/coverage
          key: backend-coverage-${{ github.run_number }}
          restore-keys: |
            backend-coverage-

      - name: Get frontend coverage from cache
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/coverage
          key: frontend-coverage-${{ github.run_number }}
          restore-keys: |
            frontend-coverage-

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.exclusions=**/test/**,.github/**/*
            -Dsonar.organization=bcgov-sonarcloud
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info,frontend/coverage/lcov.info
            -Dsonar.cobertura.reportPaths=backend/coverage/cobertura-coverage.xml,frontend/coverage/cobertura-coverage.xml
            -Dsonar.project.monorepo.enabled=true
            -Dsonar.projectKey=greenfield-template
            -Dsonar.sources=backend,frontend
            -Dsonar.tests=backend/test,frontend/test

  deploy-database:
    name: Deploy
    needs:
      - build-backend
      - build-frontend
    # If any of the prerequs created a build, then deploy
    if: contains(needs.*.outputs.build, 'true')
    uses: ./.github/workflows/_deploy-init.yml
    secrets:
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      app_name: gfp
      component: database
      template_file: .github/openshift/deploy.database.yml
      template_vars: -p ZONE=${{ github.event.number }}
      zone: ${{ github.event.number }}

  deploy-backend:
    name: Deploy
    needs:
      - build-backend
      - build-frontend
    # If any of the prerequs created a build, then deploy
    if: contains(needs.*.outputs.build, 'true')
    uses: ./.github/workflows/_deploy.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      app_name: gfp
      component: backend
      domain: apps.silver.devops.gov.bc.ca
      template_file: .github/openshift/deploy.backend.yml
      template_vars: -p ZONE=${{ github.event.number }} -p PROMOTE=${{ github.repository }}:${{ github.event.number }}-backend
      url: https://gfp-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca
      zone: ${{ github.event.number }}

  deploy-frontend:
    name: Deploy
    needs:
      - build-backend
      - build-frontend
    # If any of the prerequs created a build, then deploy
    if: contains(needs.*.outputs.build, 'true')
    uses: ./.github/workflows/_deploy.yml
    secrets:
      gh_token: ${{ secrets.GITHUB_TOKEN }}
      oc_namespace: ${{ secrets.OC_NAMESPACE }}
      oc_server: ${{ secrets.OC_SERVER }}
      oc_token: ${{ secrets.OC_TOKEN }}
    with:
      app_name: gfp
      component: frontend
      domain: apps.silver.devops.gov.bc.ca
      template_file: .github/openshift/deploy.frontend.yml
      template_vars: -p ZONE=${{ github.event.number }} -p PROMOTE=${{ github.repository }}:${{ github.event.number }}-frontend
      url: https://gfp-${{ github.event.number }}-backend.apps.silver.devops.gov.bc.ca
      zone: ${{ github.event.number }}

  deploy-check:
    name: Post-deploy
    needs:
      - deploy-database
      - deploy-backend
      - deploy-frontend
    runs-on: ubuntu-22.04
    steps:
      - name: Verify deployment
        env:
          LINKS: (
            'https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}'
            'https://${{ env.NAME }}-${{ github.event.number }}-frontend.${{ env.DOMAIN }}'
            )
        run: |
          LINKS=${{ env.LINKS }}
          for l in "${LINKS[@]}"; do
              if [ $(curl -L -s -o /dev/null -w "%{http_code}" "${l}") -ne 200 ]
              then
                  echo "Status != 200 for ${l}"
                  exit 1
              fi
          done
          echo "Deployment verification successful"

      - name: Comment with links
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allow-repeats: false
          message: |
            DEV deployments have completed successfully!
            [Backend](https://${{ env.NAME }}-${{ github.event.number }}-backend.${{ env.DOMAIN }}/) available
            [Frontend](https://${{ env.NAME }}-${{ github.event.number }}-frontend.${{ env.DOMAIN }}/) available

  # https://docs.github.com/en/actions/learn-github-actions/contexts
  view-context:
    name: View GitHub Context
    runs-on: ubuntu-22.04
    steps:
      - name: Echo GitHub context
        uses: satackey/action-js-inline@v0.0.2
        with:
          script: |
            const github = require('@actions/github');
            console.log(JSON.stringify(github, null, 2));
