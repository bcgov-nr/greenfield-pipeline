name: .Tests

on:
  workflow_call:
    inputs:
      ### Typical / recommended
      target:
        description: PR number, test or prod
        required: false
        type: string
        default: test
      triggers:
        description: Paths to trigger a deploy; omit=always; e.g. ('backend/' 'frontend/')
        required: false
        type: string

env:
  DOMAIN: apps.silver.devops.gov.bc.ca
  PREFIX: ${{ github.event.repository.name }}-${{ inputs.target }}

jobs:
  triggers:
    name: Triggers
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - name: Check Deployment Triggers
        id: triggers
        run: |
          # Expand for trigger processing

          # Always deploy if no triggers are provided
          if [ -z "${{ inputs.triggers }}" ]; then
            echo "Always deploy when no triggers are provided"
            echo "triggered=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Deploy if changed files (git diff) match triggers
          TRIGGERS=${{ inputs.triggers }}
          git fetch origin ${{ github.event.repository.default_branch }}
          while read -r check; do
            for t in "${TRIGGERS[@]}"; do
              if [[ "${check}" =~ "${t}" ]]; then
                  echo "Build triggered based on git diff"
                  echo -e "${t}\n --> ${check}"
                  echo "triggered=true" >> $GITHUB_OUTPUT
                  exit 0
              fi
            done
          done < <(git diff origin/${{ github.event.repository.default_branch }} --name-only)

          # If here skip deployment
          echo "No triggers have fired, deployment skipped"

  integration-tests:
    name: Integration
    needs: [triggers]
    if: ${{ needs.triggers.outputs.triggered == 'true' }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - env:
          API_NAME: nest
          BASE_URL: https://${{ github.event.repository.name }}-${{ inputs.target }}-frontend.${{ env.DOMAIN }}
        run: |
          cd integration-tests
          npm ci
          node src/main.js

  cypress-e2e-tests:
    name: E2E
    needs: [triggers]
    if: ${{ needs.triggers.outputs.triggered == 'true' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: cypress-io/github-action@v6
        env:
          CYPRESS_baseUrl: https://${{ github.event.repository.name }}-${{ inputs.target }}-frontend.${{ env.DOMAIN }}/
        with:
          config: pageLoadTimeout=10000
          working-directory: ./frontend
          browser: ${{ matrix.browser }}

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: ./cypress/screenshots
          if-no-files-found: ignore # 'warn' or 'error' are also available, defaults to `warn`

  load-tests:
    name: Load
    needs: [triggers]
    if: ${{ needs.triggers.outputs.triggered == 'true' }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        name: [backend, frontend]
    steps:
      - uses: actions/checkout@v4
      - uses: grafana/k6-action@v0.3.1
        env:
          BACKEND_URL: https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/api
          FRONTEND_URL: https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}
        with:
          filename: ./load-test/${{ matrix.name }}-test.js
          flags: --vus 10 --duration 30s
